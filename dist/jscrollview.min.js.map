{"version":3,"sources":["webpack:///jscrollview.min.js","webpack:///webpack/bootstrap a9bfca405bc08b793b98","webpack:///./library.js"],"names":["JScrollView","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_geometricProgression","t","r","arguments","length","undefined","Math","pow","_limitSpring","min","offset","max","k","_toPX","number","_toAbsLength","base","value","charAt","substring","Number","_extends","assign","target","source","key","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","container","options","_this","this","_baseContentSize","_marginInPixel","_contentAdjust","x","y","_contentOffset","contentOffset","_contentMargin","top","left","bottom","right","contentMargin","_zoomScale","zoomScale","_wheelZoomScale","wheelZoomScale","_minimumZoomScale","minimumZoomScale","_maximumZoomScale","maximumZoomScale","_checkDoubleTapFailure","checkDoubleTapFailure","_watchResize","watchResize","_scrollBounce","scrollBounce","document","getElementById","querySelector","Error","style","overflow","contentRoot","createElement","id","position","width","height","transformOrigin","children","appendChild","_contentRoot","_container","_installGestureRecognizer","_resizeListener","evt","_containerWidth","clientWidth","_containerHeight","clientHeight","invalidateSize","setNeedsLayout","window","addEventListener","_this2","mc","Hammer","Manager","doubleTap","Tap","event","taps","threshold","singleTap","pan","Pan","direction","DIRECTION_ALL","pinch","Pinch","add","recognizeWith","requireFailure","on","_handleSingleTap","preventDefault","_handleDoubleTap","_handlePan","_handlePinch","_mouseWheelListener","_handleMouseWheel","_gestureDelegate","_mc","removeEventListener","destroy","delegate","content","innerHTML","margin","animated","layout","scale","_this3","_layoutTimerId","setTimeout","duration","_containterWidth","console","log","clearTimeout","transition","join","contentAdjust","_calcContentAdjust","transform","toFixed","_calcContentSize","size","_adjust","containerWidth","contentWidth","marginLeft","marginRight","isNaN","_calcMarginInPixel","_calcBaseContentSize","w","h","elements","child","offsetLeft","offsetWidth","offsetTop","offsetHeight","element","offsetParent","pos","containerOffset","_getContainerOffset","globalToContainer","handleSingleTap","handleDoubleTap","_lock","setContentOffsetAndZoomScale","globalToContent","center","zoomToPoint","adjust","bounce","_getMinimumContentOffset","_getMaximumContentOffset","bounceX","bounceY","handlePan","_pinchStartZoomScale","type","_panStartOffset","_limitContentOffset","deltaX","deltaY","setContentOffset","spring","pageX","pageY","_limitZoomScale","handlePinch","_lastPinchCenter","currentRect","a","rx","ry","rect","zoomTo","limitOffset","scaleX","scaleY","newScale","newOffset","flag","default"],"mappings":"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","file":"jscrollview.min.js","sourcesContent":["var JScrollView =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** @license\nMIT License\n\nCopyright (c) 2017 Mitsutaka Okazaki\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n/**\n * @private\n */\nfunction __debug(name, object) {\n\tconsole.log(name + \"=\" + JSON.stringify(object));\n}\n\n/**\n * @private\n */\nfunction _geometricProgression(t) {\n\tvar r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.985;\n\tvar a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n\treturn a * (1 - Math.pow(r, t)) / (1 - r);\n}\n\n/**\n * @private\n */\nfunction _limitSpring(min, offset, max) {\n\tvar k = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n\tif (offset < min) {\n\t\tvar t = min - offset;\n\t\treturn min - _geometricProgression(t) / k;\n\t} else if (max < offset) {\n\t\tvar _t = offset - max;\n\t\treturn max + _geometricProgression(_t) / k;\n\t} else {\n\t\treturn offset;\n\t}\n}\n\n/**\n * @private\n */\nfunction _toPX(number) {\n\treturn number + \"px\";\n}\n\n/**\n * Convert relative percent length to absolute pixel.\n * @private\n */\nfunction _toAbsLength(base, value) {\n\tif (typeof value == 'string' && value.charAt(value.length - 1) == '%') {\n\t\tvar s = value.substring(0, value.length - 1);\n\t\treturn base * Number(s) / 100;\n\t}\n\treturn Number(value);\n}\n\nfunction _scaleRect(rect, scale) {\n\treturn {\n\t\tx: rect.x * scale,\n\t\ty: rect.y * scale,\n\t\twidth: rect.width * scale,\n\t\theight: rect.height * scale\n\t};\n}\n\n/**\n * A Javascript ScrollView module with pan and pinch support. Hammer.js is required. \n */\n\nvar JScrollView = function () {\n\t/**\n  * @param {HtmlDivElement|string} container The DIV element or id or selector string that specifies a DIV element. \n  *   JScrollView's root container is attached to the element. If the given DIV already contains child elements, \n  *   they are moved into the content root element of the scroll view. To attach the content element by code, \n  *   use `setContent(content)` method instead.\n  * @param {Object} [options] \n  * @param {Object} [options.contentOffset] \n  * @param {number} [options.contentOffset.x=0] The X offset of the content.\n  * @param {number} [options.contentOffset.y=0] The Y offset of the content.\n  * @param {Object} [options.contentMargin]\n  * @param {number|string} [options.contentMargin.top='auto'] The top margin of the content. number, percentage or `'auto'`.\n  * @param {number|string} [options.contentMargin.left='auto'] The left margin of the content. number, percentage or `'auto'`.\n  * @param {number|string} [options.contentMargin.bottom='auto'] The bottom margin of the content. number, percentage or `'auto'`.\n  * @param {number|string} [options.contentMargin.right='auto'] The right margin of the content. number, percentage or `'auto'`.\t \n  * @param {number} [options.zoomScale=1.0]\n  * @param {boolean} [options.checkDobuleTapFailure=false] \n  * - true to handle single tap event only if double tap gesture recognizer fails.\n  * - false to handle single and double tap event simultaneously.\n  * @param {number} [options.minimumZoomScale=0.5]\n  * @param {number} [options.maximumZoomScale=5.5]\n  * @param {string} [options.scrollBounce='auto'] \n  * - 'off' to disable scroll bounce.\n  * - 'on' to enable scroll bounce.\n  * - 'auto' to disable scroll bounce if the content size is smaller than the view size.\n  * @param {boolean} [options.watchResize=true] \n  * - true to watch the window resize event and do layout process automatically.\n     * - false to stop watching the event.\n  */\n\tfunction JScrollView(container, options) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, JScrollView);\n\n\t\toptions = options || {};\n\t\tthis._baseContentSize = null;\n\t\tthis._marginInPixel = null;\n\t\tthis._contentAdjust = { x: 0, y: 0 };\n\t\tthis._contentOffset = _extends({ x: 0, y: 0 }, options.contentOffset);\n\t\tthis._contentMargin = _extends({ top: 'auto', left: 'auto', bottom: 'auto', right: 'auto' }, options.contentMargin);\n\t\tthis._zoomScale = options.zoomScale || 1.0;\n\t\tthis._wheelZoomScale = options.wheelZoomScale || 1.1;\n\t\tthis._minimumZoomScale = options.minimumZoomScale || 0.5;\n\t\tthis._maximumZoomScale = options.maximumZoomScale || 5.5;\n\t\tthis._checkDoubleTapFailure = options.checkDoubleTapFailure || false;\n\t\tthis._watchResize = options.watchResize || true;\n\t\tthis._scrollBounce = options.scrollBounce || 'auto';\n\n\t\tif (typeof container === 'string') {\n\t\t\tcontainer = document.getElementById(container) || document.querySelector(container);\n\t\t\tif (container == null) {\n\t\t\t\tthrow new Error('Missing container: ' + container);\n\t\t\t}\n\t\t}\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\tvar contentRoot = document.createElement('div');\n\t\tcontentRoot.id = '__jscrollview_root_';\n\t\tcontentRoot.style.position = 'absolute';\n\t\tcontentRoot.style.width = '100%';\n\t\tcontentRoot.style.height = '100%';\n\t\tcontentRoot.style.transformOrigin = \"top left\";\n\t\tvar children = container.children;\n\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\tcontentRoot.appendChild(children[i]);\n\t\t}\n\t\tcontainer.appendChild(contentRoot);\n\t\tthis._contentRoot = contentRoot;\n\t\tthis._container = container;\n\n\t\tthis._installGestureRecognizer(container, options);\n\t\tthis._resizeListener = function (evt) {\n\t\t\t_this._containerWidth = _this._container.clientWidth;\n\t\t\t_this._containerHeight = _this._container.clientHeight;\n\t\t\t_this.invalidateSize();\n\t\t\t_this.setNeedsLayout();\n\t\t};\n\t\tif (this._watchResize) {\n\t\t\twindow.addEventListener('resize', this._resizeListener);\n\t\t}\n\t\tthis._resizeListener();\n\t}\n\n\t_createClass(JScrollView, [{\n\t\tkey: \"_installGestureRecognizer\",\n\t\tvalue: function _installGestureRecognizer(container, options) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar mc = new Hammer.Manager(container, {});\n\t\t\tvar doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2, threshold: 5 });\n\t\t\tvar singleTap = new Hammer.Tap({ event: 'singletap' });\n\t\t\tvar pan = new Hammer.Pan({ direction: Hammer.DIRECTION_ALL });\n\t\t\tvar pinch = new Hammer.Pinch();\n\n\t\t\tmc.add([doubleTap, singleTap, pan, pinch]);\n\n\t\t\tdoubleTap.recognizeWith(singleTap);\n\t\t\tif (options.checkDoubleTapFailure) {\n\t\t\t\tsingleTap.requireFailure(doubleTap);\n\t\t\t}\n\t\t\tpinch.recognizeWith(pan);\n\n\t\t\tmc.on(\"singletap\", function (evt) {\n\t\t\t\t_this2._handleSingleTap(evt);evt.preventDefault();\n\t\t\t});\n\t\t\tmc.on(\"doubletap\", function (evt) {\n\t\t\t\t_this2._handleDoubleTap(evt);evt.preventDefault();\n\t\t\t});\n\t\t\tmc.on(\"panstart panmove panend pancancel\", function (evt) {\n\t\t\t\t_this2._handlePan(evt);evt.preventDefault();\n\t\t\t});\n\t\t\tmc.on(\"pinchstart pinchmove pinchend pinchcancel\", function (evt) {\n\t\t\t\t_this2._handlePinch(evt);evt.preventDefault();\n\t\t\t});\n\n\t\t\tthis._mouseWheelListener = function (evt) {\n\t\t\t\t_this2._handleMouseWheel(evt);evt.preventDefault();\n\t\t\t};\n\t\t\tcontainer.addEventListener('mousewheel', this._mouseWheelListener);\n\n\t\t\tthis._gestureDelegate = {};\n\t\t\tthis._mc = mc;\n\t\t}\n\n\t\t/**\n   * Get the container DIV element which bound to this view.\n   * @returns {HTMLDivElement}\n   */\n\n\t}, {\n\t\tkey: \"getContainer\",\n\t\tvalue: function getContainer() {\n\t\t\treturn this._container;\n\t\t}\n\n\t\t/**\n   * Get the view's internal Hammer.Manager instance that bound to the view's container.\n   * @returns {Hammer.Manager} the gesture controller instance.\n   */\n\n\t}, {\n\t\tkey: \"getHammer\",\n\t\tvalue: function getHammer() {\n\t\t\treturn this._mc;\n\t\t}\n\n\t\t/**\n   * Destroy the view and unbinds all events. It does not destroy the content element. \n   * To remove the content element is the user own responsibility.\n   */\n\n\t}, {\n\t\tkey: \"destroy\",\n\t\tvalue: function destroy() {\n\t\t\tthis._container.removeEventListener('mousewheel', this._mouseWheelListener);\n\t\t\twindow.removeEventListener('resize', this._resizeListener);\n\t\t\tthis._mc.destroy();\n\t\t\tthis._container = null;\n\t\t}\n\n\t\t/**\n      * Set the delegate object to intercept gesture events and customize the JScrollView's default behavior.\n      * All methods on the delegate object can return a boolean value. If the method returns true, \n      * the default action of JScrollView will be cancelled.\n      * @param {Object} delegate\n      * @param {HammerEventHandler} delegate.handleSingleTap\n      * @param {HammerEventHandler} delegate.handleDoulbeTap\n      * @param {HammerEventHandler} delegate.handlePan\n      * @param {HammerEventHandler} delegate.handlePinch\n   */\n\n\t}, {\n\t\tkey: \"setGestureDelegate\",\n\t\tvalue: function setGestureDelegate(delegate) {\n\t\t\tthis._gestureDelegate = delegate || {};\n\t\t}\n\n\t\t/**\n   * Set content element to this view. The previous content that already set to this view will be removed.\n   * @param {HtmlElement|Object} content - A HtmlElement or an object which implements `toHtmlElement()` function.\n   */\n\n\t}, {\n\t\tkey: \"setContent\",\n\t\tvalue: function setContent(content) {\n\t\t\tif (typeof content['toHtmlElement'] === 'function') {\n\t\t\t\tcontent = content['toHtmlElement']();\n\t\t\t}\n\t\t\tthis._contentRoot.innerHTML = '';\n\t\t\tthis._contentRoot.appendChild(content);\n\t\t\tthis.invalidateSize();\n\t\t\tthis.setNeedsLayout();\n\t\t}\n\n\t\t/**\n   * Invalidates inner layout of the view.\n   * This method should be called if the view or content size is changed.\n   */\n\n\t}, {\n\t\tkey: \"invalidateSize\",\n\t\tvalue: function invalidateSize() {\n\t\t\tthis._baseContentSize = null;\n\t\t\tthis._marginInPixel = null;\n\t\t}\n\n\t\t/** set/get the content margin.\n   * @param {Object} [margin]\n   * @param {number|string} [margin.top='auto'] The top margin of the content. number or `'auto'`.\n   * @param {number|string} [margin.left='auto'] The left margin of the content. number or `'auto'`.\n   * @param {number|string} [margin.bottom='auto'] The bottom margin of the content. number or `'auto'`.\n   * @param {number|string} [margin.right='auto'] The right margin of the content. number or `'auto'`.\t \n   */\n\n\t}, {\n\t\tkey: \"contentMargin\",\n\t\tvalue: function contentMargin(margin) {\n\t\t\tif (margin != null) {\n\t\t\t\tif (margin.top != null) this._contentMargin.top = margin.top;\n\t\t\t\tif (margin.left != null) this._contentMargin.left = margin.left;\n\t\t\t\tif (margin.bottom != null) this._contentMargin.bottom = margin.bottom;\n\t\t\t\tif (margin.right != null) this._contentMargin.right = margin.right;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\ttop: this._contentMargin.top,\n\t\t\t\t\tleft: this._contentMargin.left,\n\t\t\t\t\tbottom: this._contentMargin.bottom,\n\t\t\t\t\tright: this._contentMargin.right\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * set/get the offset from the content origin.\n   * @param {Point} offset - offset from the content origin.\n   * @returns {(Point|undefined)}\n   * @example\n   * ```\n   * // get content offset\n   * var offset = view.contentOffset();\n   * \n   * // set content offset\n   * view.contentOffset({x:20,y:50});\n   * ```\n   */\n\n\t}, {\n\t\tkey: \"contentOffset\",\n\t\tvalue: function contentOffset(offset) {\n\t\t\tif (offset != null) {\n\t\t\t\tif (offset.x != null) this._contentOffset.x = offset.x;\n\t\t\t\tif (offset.y != null) this._contentOffset.y = offset.y;\n\t\t\t\tthis.setNeedsLayout();\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tx: this._contentOffset.x,\n\t\t\t\t\ty: this._contentOffset.y\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * set/get the offset from the content origin.\n   * @param {Point} offset - offset from the content origin.\n   * @param {boolean} [animated] - true to animate the transition to the new offset, false to make it immediate. \n   */\n\n\t}, {\n\t\tkey: \"setContentOffset\",\n\t\tvalue: function setContentOffset(offset, animated) {\n\t\t\tif (offset.x != null) this._contentOffset.x = offset.x;\n\t\t\tif (offset.y != null) this._contentOffset.y = offset.y;\n\t\t\tthis.layout(animated ? 0.25 : 0);\n\t\t}\n\n\t\t/**\n   * set/get a floating-point value that specifies the relative scale factor for mouse wheel zooming.\n   * @param {number} [scale] relative scale factor \n   * @returns {(number|undefined)}\n   */\n\n\t}, {\n\t\tkey: \"wheelZoomScale\",\n\t\tvalue: function wheelZoomScale(scale) {\n\t\t\tif (scale != null) {\n\t\t\t\tthis._wheelZoomScale = scale;\n\t\t\t} else {\n\t\t\t\treturn this._wheelZoomScale;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * set/get a floating-point value that specifies the current scale factor applied to the view's content.\n   * @param {number} [scale] scale factor \n   * @returns {(number|undefined)}\n   */\n\n\t}, {\n\t\tkey: \"zoomScale\",\n\t\tvalue: function zoomScale(scale) {\n\t\t\tif (scale != null) {\n\t\t\t\tthis._zoomScale = scale;\n\t\t\t\tthis.setNeedsLayout();\n\t\t\t} else {\n\t\t\t\treturn this._zoomScale;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * set the current scale factor applied to the view's content.\n   * @param {number} scale scale factor\n   * @param {boolean} [animated] true to animate the transition to the new scale, false to make it immediate.\n   */\n\n\t}, {\n\t\tkey: \"setZoomScale\",\n\t\tvalue: function setZoomScale(scale, animated) {\n\t\t\tthis._zoomScale = scale;\n\t\t\tthis.layout(animated ? 0.25 : 0);\n\t\t}\n\n\t\t/**\n   * set the current scale factor and the offset from the view's content\n   * @param {Point} offset \n   * @param {number} scale scale factor\n   * @param {boolean} [animated] true to animate the transition, false to make it immediate.\n   */\n\n\t}, {\n\t\tkey: \"setContentOffsetAndZoomScale\",\n\t\tvalue: function setContentOffsetAndZoomScale(offset, scale, animated) {\n\t\t\tif (offset.x != null) this._contentOffset.x = offset.x;\n\t\t\tif (offset.y != null) this._contentOffset.y = offset.y;\n\t\t\tthis._zoomScale = scale;\n\t\t\tthis.layout(animated ? 0.25 : 0);\n\t\t}\n\n\t\t/**\n   * set/get a floating-point value that specifies the minimum scale factor that applied to the view's content.\n   * @param {number} [scale] \n   * @returns {(number|undefined)} \n   */\n\n\t}, {\n\t\tkey: \"minimumZoomScale\",\n\t\tvalue: function minimumZoomScale(scale) {\n\t\t\tif (scale != null) {\n\t\t\t\tthis._minimumZoomScale = scale;\n\t\t\t} else {\n\t\t\t\treturn this._minimumZoomScale;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * set/get a floating-point value that specifies the maximum scale factor that applied to the view's content.\n   * @param {number} [scale] 拡大率の最大値\n   * @returns {(number|undefined)} \n   */\n\n\t}, {\n\t\tkey: \"maximumZoomScale\",\n\t\tvalue: function maximumZoomScale(scale) {\n\t\t\tif (scale != null) {\n\t\t\t\tthis._maximumZoomScale = scale;\n\t\t\t} else {\n\t\t\t\treturn this._maximumZoomScale;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Invalidates the current layout of the view, and update the layout during the next update cycle.\n   */\n\n\t}, {\n\t\tkey: \"setNeedsLayout\",\n\t\tvalue: function setNeedsLayout() {\n\t\t\tvar _this3 = this;\n\n\t\t\tif (this._layoutTimerId == null) {\n\t\t\t\tthis._layoutTimerId = setTimeout(function () {\n\t\t\t\t\t_this3.layout();\n\t\t\t\t\t_this3._layoutTimerId = null;\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Update the view's layout\n   * @param {number} [duration] the time of the transition animation. 0 to make the transition immediate.\n   */\n\n\t}, {\n\t\tkey: \"layout\",\n\t\tvalue: function layout() {\n\t\t\tvar duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n\n\t\t\tif (this._containterWidth == 0 || this._containerHeight == 0) {\n\t\t\t\tconsole.log(\"Fatal Error: invalid container size. \" + this._containerWidth + \"x\" + this._containerHeight);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (0 < duration) {\n\t\t\t\tif (this._layoutTimerId != null) {\n\t\t\t\t\tclearTimeout(this._layoutTimerId);\n\t\t\t\t\tthis._layoutTimerId = null;\n\t\t\t\t}\n\n\t\t\t\tthis._contentRoot.style.transition = [\"transform \" + duration + \"s\"].join(',');\n\t\t\t} else {\n\t\t\t\tthis._contentRoot.style.transition = \"none\";\n\t\t\t}\n\n\t\t\tvar contentAdjust = this._calcContentAdjust(this._zoomScale);\n\n\t\t\tvar left = _toPX(contentAdjust.x - this._contentOffset.x);\n\t\t\tvar top = _toPX(contentAdjust.y - this._contentOffset.y);\n\t\t\tvar transform = [\"translate(\" + left + \",\" + top + \")\", \"scale(\" + this._zoomScale.toFixed(4) + \")\"].join(\" \");\n\t\t\tthis._contentRoot.style.transform = transform;\n\t\t}\n\n\t\t/**\n   * Get the size of the content at the current scale factor. The size of the content is computed\n   * from the content and its children. There is no method to set the size of the content.\n   * @returns {Size} The size of the content.\n   */\n\n\t}, {\n\t\tkey: \"getContentSize\",\n\t\tvalue: function getContentSize() {\n\t\t\treturn this._calcContentSize(this._zoomScale);\n\t\t}\n\t}, {\n\t\tkey: \"_calcMarginInPixel\",\n\t\tvalue: function _calcMarginInPixel() {\n\t\t\tif (this._marginInPixel == null) {\n\t\t\t\tthis._marginInPixel = {\n\t\t\t\t\ttop: _toAbsLength(this._containerHeight, this._contentMargin.top),\n\t\t\t\t\tleft: _toAbsLength(this._containerWidth, this._contentMargin.left),\n\t\t\t\t\tbottom: _toAbsLength(this._containerHeight, this._contentMargin.bottom),\n\t\t\t\t\tright: _toAbsLength(this._containerWidth, this._contentMargin.right)\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this._marginInPixel;\n\t\t}\n\n\t\t/** \n   * Calculate additional offset of the content that applied if the content size is smaller than view's size.\n   * @param {number} scale - A flooting-point value that specifies the scale factor of the content.\n   * @private\n   */\n\n\t}, {\n\t\tkey: \"_calcContentAdjust\",\n\t\tvalue: function _calcContentAdjust(scale) {\n\t\t\tvar size = this._calcContentSize(scale);\n\n\t\t\tvar _adjust = function _adjust(containerWidth, contentWidth, marginLeft, marginRight) {\n\t\t\t\tvar x = void 0;\n\t\t\t\tif (isNaN(marginLeft) && !isNaN(marginRight)) {\n\t\t\t\t\tx = (containerWidth - contentWidth - marginRight) / scale;\n\t\t\t\t} else if (!isNaN(marginLeft) && isNaN(marginRight)) {\n\t\t\t\t\tx = marginLeft / scale;\n\t\t\t\t} else if (!isNaN(marginLeft) && !isNaN(marginRight)) {\n\t\t\t\t\tx = (containerWidth - contentWidth - marginRight) / scale;\n\t\t\t\t\tx = Math.max(x, marginLeft / scale);\n\t\t\t\t} else {\n\t\t\t\t\tx = Math.max(0, (containerWidth - contentWidth) / 2);\n\t\t\t\t}\n\t\t\t\treturn x;\n\t\t\t};\n\n\t\t\tvar margin = this._calcMarginInPixel();\n\t\t\tvar ret = {\n\t\t\t\tx: _adjust(this._containerWidth, size.width, margin.left, margin.right),\n\t\t\t\ty: _adjust(this._containerHeight, size.height, margin.top, margin.bottom)\n\t\t\t};\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * Calculate the size of the content at a specified scale factor.\n   * @param {number} scale - A flooting-point value that specifies the scale factor of the content.\n   * @private\n   */\n\n\t}, {\n\t\tkey: \"_calcContentSize\",\n\t\tvalue: function _calcContentSize(scale) {\n\t\t\tvar size = this._calcBaseContentSize();\n\t\t\treturn { width: size.width * scale, height: size.height * scale };\n\t\t}\n\n\t\t/**\n   * Calculate the size of the content at the scale factor 1.0.\n   * @private\n   */\n\n\t}, {\n\t\tkey: \"_calcBaseContentSize\",\n\t\tvalue: function _calcBaseContentSize() {\n\t\t\tif (this._baseContentSize == null) {\n\t\t\t\tvar w = 0,\n\t\t\t\t    h = 0;\n\t\t\t\tvar elements = this._contentRoot.children;\n\t\t\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\t\t\tvar child = elements[i];\n\t\t\t\t\tw = Math.max(w, child.offsetLeft + child.offsetWidth);\n\t\t\t\t\th = Math.max(h, child.offsetTop + child.offsetHeight);\n\t\t\t\t}\n\t\t\t\tthis._baseContentSize = { width: w, height: h };\n\t\t\t}\n\t\t\treturn {\n\t\t\t\twidth: this._baseContentSize.width,\n\t\t\t\theight: this._baseContentSize.height\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"_getContainerOffset\",\n\t\tvalue: function _getContainerOffset() {\n\t\t\tvar element = this._container;\n\t\t\tvar x = 0,\n\t\t\t    y = 0;\n\t\t\twhile (element != null) {\n\t\t\t\tx += element.offsetLeft;\n\t\t\t\ty += element.offsetTop;\n\t\t\t\telement = element.offsetParent;\n\t\t\t}\n\t\t\treturn { x: x, y: y };\n\t\t}\n\n\t\t/**\n   * Converts a point from the global coordinate system to that of the view's container.\n  * @param {Point} pos A point specified in the global coordinate sytem.\n  * @returns {Point} A point specified in the container coordinate system of this view.\n   */\n\n\t}, {\n\t\tkey: \"globalToContainer\",\n\t\tvalue: function globalToContainer(pos) {\n\t\t\tvar containerOffset = this._getContainerOffset();\n\t\t\treturn {\n\t\t\t\tx: pos.x - containerOffset.x,\n\t\t\t\ty: pos.y - containerOffset.y\n\t\t\t};\n\t\t}\n\n\t\t/**\n      * Converts a point from the global coordinate system to that of the content.\n   * @param {Point} pos A point specified in the global coordinate sytem.\n   * @returns {Point} A point specified in the content coordinate system.\n   */\n\n\t}, {\n\t\tkey: \"globalToContent\",\n\t\tvalue: function globalToContent(pos) {\n\t\t\tpos = this.globalToContainer(pos);\n\t\t\tvar contentAdjust = this._calcContentAdjust(this._zoomScale);\n\t\t\treturn {\n\t\t\t\tx: (pos.x + this._contentOffset.x - contentAdjust.x) / this._zoomScale,\n\t\t\t\ty: (pos.y + this._contentOffset.y - contentAdjust.y) / this._zoomScale\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"_handleSingleTap\",\n\t\tvalue: function _handleSingleTap(evt) {\n\t\t\tif (this._gestureDelegate.handleSingleTap != null) {\n\t\t\t\tif (this._gestureDelegate.handleSingleTap(evt)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"_handleDoubleTap\",\n\t\tvalue: function _handleDoubleTap(evt) {\n\n\t\t\tif (this._gestureDelegate.handleDoubleTap != null) {\n\t\t\t\tif (this._gestureDelegate.handleDoubleTap(evt)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._lock) return;\n\n\t\t\tif (this._zoomScale != 1.0) {\n\t\t\t\tthis.setContentOffsetAndZoomScale({ x: 0, y: 0 }, 1.0, true);\n\t\t\t} else {\n\t\t\t\tvar pos = this.globalToContent(evt.center);\n\t\t\t\tthis.zoomToPoint(pos, 4.0, true);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"_getMinimumContentOffset\",\n\t\tvalue: function _getMinimumContentOffset(scale) {\n\t\t\treturn { x: 0, y: 0 };\n\t\t}\n\t}, {\n\t\tkey: \"_getMaximumContentOffset\",\n\t\tvalue: function _getMaximumContentOffset(scale) {\n\t\t\tvar size = this._calcContentSize(scale || this._zoomScale);\n\t\t\tvar adjust = this._calcContentAdjust(scale || this._zoomScale);\n\t\t\treturn {\n\t\t\t\tx: Math.max(0, size.width - this._containerWidth + adjust.x),\n\t\t\t\ty: Math.max(0, size.height - this._containerHeight + adjust.y)\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"_limitContentOffset\",\n\t\tvalue: function _limitContentOffset(offset, bounce, scale) {\n\t\t\tscale = scale || this._zoomScale;\n\t\t\tvar min = this._getMinimumContentOffset(scale);\n\t\t\tvar max = this._getMaximumContentOffset(scale);\n\n\t\t\tvar size = this._calcContentSize(scale);\n\n\t\t\tvar bounceX = void 0,\n\t\t\t    bounceY = void 0;\n\t\t\tif (bounce) {\n\t\t\t\tif (this._scrollBounce == 'auto') {\n\t\t\t\t\tbounceX = this._containerWidth < size.width;\n\t\t\t\t\tbounceY = this._containerHeight < size.height;\n\t\t\t\t} else {\n\t\t\t\t\tbounceX = bounceY = this._scrollBounce != 'off';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbounceX = bounceY = false;\n\t\t\t}\n\n\t\t\tvar x = void 0,\n\t\t\t    y = void 0;\n\t\t\tif (bounceX) {\n\t\t\t\tx = _limitSpring(min.x, offset.x, max.x, 4 / scale);\n\t\t\t} else {\n\t\t\t\tx = Math.min(Math.max(offset.x, min.x), max.x);\n\t\t\t}\n\t\t\tif (bounceY) {\n\t\t\t\ty = _limitSpring(min.y, offset.y, max.y, 4 / scale);\n\t\t\t} else {\n\t\t\t\ty = Math.min(Math.max(offset.y, min.y), max.y);\n\t\t\t}\n\t\t\treturn { x: x, y: y };\n\t\t}\n\t}, {\n\t\tkey: \"_handlePan\",\n\t\tvalue: function _handlePan(evt) {\n\t\t\tif (this._gestureDelegate.handlePan != null) {\n\t\t\t\tif (this._gestureDelegate.handlePan(evt)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._lock || this._pinchStartZoomScale) return;\n\n\t\t\tif (evt.type == \"panstart\") {\n\t\t\t\tthis._panStartOffset = {\n\t\t\t\t\tx: this._contentOffset.x,\n\t\t\t\t\ty: this._contentOffset.y\n\t\t\t\t};\n\t\t\t} else if (evt.type == 'panmove') {\n\t\t\t\tvar offset = this._limitContentOffset({\n\t\t\t\t\tx: this._panStartOffset.x - evt.deltaX,\n\t\t\t\t\ty: this._panStartOffset.y - evt.deltaY\n\t\t\t\t}, true);\n\t\t\t\tthis._contentOffset.x = offset.x;\n\t\t\t\tthis._contentOffset.y = offset.y;\n\t\t\t\tthis.layout();\n\t\t\t} else if (evt.type == 'panend' || evt.type == 'pancancel') {\n\n\t\t\t\tthis._panStartOffset = null;\n\n\t\t\t\tvar min = this._getMinimumContentOffset();\n\t\t\t\tvar max = this._getMaximumContentOffset();\n\n\t\t\t\tif (this._contentOffset.x < min.x || max.x < this._contentOffset.x || this._contentOffset.y < min.y || max.y < this._contentOffset.y) {\n\t\t\t\t\tthis.setContentOffset({\n\t\t\t\t\t\tx: Math.min(Math.max(this._contentOffset.x, min.x), max.x),\n\t\t\t\t\t\ty: Math.min(Math.max(this._contentOffset.y, min.y), max.y)\n\n\t\t\t\t\t}, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"_limitZoomScale\",\n\t\tvalue: function _limitZoomScale(scale, spring) {\n\t\t\tif (spring) {\n\t\t\t\treturn _limitSpring(this._minimumZoomScale, scale, this._maximumZoomScale, 4);\n\t\t\t} else {\n\t\t\t\treturn Math.min(Math.max(this._minimumZoomScale, scale), this._maximumZoomScale);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"_handleMouseWheel\",\n\t\tvalue: function _handleMouseWheel(evt) {\n\t\t\tvar center = this.globalToContent({ x: evt.pageX, y: evt.pageY });\n\t\t\tif (evt.deltaY < 0) {\n\t\t\t\tthis.zoomToPoint(center, this._limitZoomScale(this._zoomScale * this._wheelZoomScale), false);\n\t\t\t} else if (0 < evt.deltaY) {\n\t\t\t\tthis.zoomToPoint(center, this._limitZoomScale(this._zoomScale / this._wheelZoomScale), false);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"_handlePinch\",\n\t\tvalue: function _handlePinch(evt) {\n\t\t\tif (this._gestureDelegate.handlePinch != null) {\n\t\t\t\tif (this._gestureDelegate.handlePinch(evt)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._lock) return;\n\n\t\t\tif (evt.type == \"pinchstart\") {\n\t\t\t\tthis._pinchStartZoomScale = this._zoomScale;\n\t\t\t} else if (evt.type == 'pinchmove') {\n\t\t\t\tvar scale = this._limitZoomScale(this._pinchStartZoomScale * evt.scale, true);\n\t\t\t\tthis._lastPinchCenter = this.globalToContent(evt.center);\n\t\t\t\tthis.zoomToPoint(this._lastPinchCenter, scale);\n\t\t\t} else if (evt.type == 'pinchend' || evt.type == 'pinchcancel') {\n\t\t\t\tif (this._zoomScale < this._minimumZoomScale) {\n\t\t\t\t\tthis.setContentOffsetAndZoomScale({ x: 0, y: 0 }, this._minimumZoomScale, true);\n\t\t\t\t} else if (this._maximumZoomScale < this._zoomScale) {\n\t\t\t\t\tthis.zoomToPoint(this._lastPinchCenter, this._maximumZoomScale, true);\n\t\t\t\t}\n\t\t\t\tthis._pinchStartZoomScale = null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Zooms to a specific point of the content.\n   * @param {Point} pos A target point of the zoom. The point should be specified in the content's coordinate system.\n   * @param {number} scale A floating-point value that specifies the new scale factor.\n   * @param {boolean} animated true to animate the transition, false to make it immediate.\n   */\n\n\t}, {\n\t\tkey: \"zoomToPoint\",\n\t\tvalue: function zoomToPoint(pos, scale, animated) {\n\t\t\tvar contentAdjust = this._calcContentAdjust(this._zoomScale);\n\n\t\t\tvar currentRect = {\n\t\t\t\tx: (this._contentOffset.x - contentAdjust.x) / this._zoomScale,\n\t\t\t\ty: (this._contentOffset.y - contentAdjust.y) / this._zoomScale,\n\t\t\t\twidth: this._containerWidth / this._zoomScale,\n\t\t\t\theight: this._containerHeight / this._zoomScale\n\t\t\t};\n\n\t\t\tvar a = this._zoomScale / scale;\n\t\t\tvar rx = pos.x - currentRect.x,\n\t\t\t    ry = pos.y - currentRect.y;\n\t\t\tvar rect = {\n\t\t\t\tx: pos.x - rx * a,\n\t\t\t\ty: pos.y - ry * a,\n\t\t\t\twidth: currentRect.width * a,\n\t\t\t\theight: currentRect.height * a\n\t\t\t};\n\n\t\t\tthis.zoomTo(rect, true, animated);\n\t\t}\n\n\t\t/**\n   * Zooms to a specific area of the content so that it is visible in this view.\n   * @param {Rectangle} rect A rectangle defining an area of the content. \n   *                         The rectangle should be in the coordinate space of the content.\n   * @param {boolean} limitOffset true to limit the content offset, false to not limit it.\n   * @param {boolean} animated true to animate the transition, false to make it immediate.\n   */\n\n\t}, {\n\t\tkey: \"zoomTo\",\n\t\tvalue: function zoomTo(rect, limitOffset, animated) {\n\n\t\t\tvar scaleX = this._containerWidth / rect.width;\n\t\t\tvar scaleY = this._containerHeight / rect.height;\n\t\t\tvar newScale = Math.min(scaleX, scaleY);\n\t\t\tvar newOffset = {\n\t\t\t\tx: rect.x * newScale,\n\t\t\t\ty: rect.y * newScale\n\t\t\t};\n\t\t\tif (limitOffset) {\n\t\t\t\tnewOffset = this._limitContentOffset(newOffset, false, newScale);\n\t\t\t}\n\t\t\tthis.setContentOffsetAndZoomScale(newOffset, newScale, animated);\n\t\t}\n\t}, {\n\t\tkey: \"lock\",\n\t\tvalue: function lock(flag) {\n\t\t\tthis._lock = flag;\n\t\t}\n\t}]);\n\n\treturn JScrollView;\n}();\n\nexports.default = JScrollView;\n\n/***/ })\n/******/ ])[\"default\"];\n\n\n// WEBPACK FOOTER //\n// jscrollview.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a9bfca405bc08b793b98","/** @license\nMIT License\n\nCopyright (c) 2017 Mitsutaka Okazaki\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n/**\n * @private\n */\nfunction __debug(name, object) {\n\tconsole.log(name + \"=\" + JSON.stringify(object));\n}\n\n/**\n * @private\n */\nfunction _geometricProgression(t,r=0.985,a=1) {\n\treturn a * (1-Math.pow(r,t)) / (1 - r);\n}\n\n/**\n * @private\n */\nfunction _limitSpring(min, offset, max, k=1) {\n\tif(offset < min) {\n\t\tlet t = min - offset;\n\t\treturn min - _geometricProgression(t)/k;\n\t} else if(max < offset) {\n\t\tlet t = offset - max;\n\t\treturn max + _geometricProgression(t)/k;\n\t} else {\n\t\treturn offset;\n\t}\n}\n\n/**\n * @private\n */\nfunction _toPX(number) {\n\treturn number + \"px\";\n}\n\n/**\n * Convert relative percent length to absolute pixel.\n * @private\n */\nfunction _toAbsLength(base, value) {\n\tif(typeof value == 'string' && value.charAt(value.length-1) == '%') {\n\t\tlet s = value.substring(0,value.length-1);\n\t\treturn base * Number(s) / 100;\n\t}\n\treturn Number(value);\n}\n\nfunction _scaleRect(rect, scale) {\n\treturn {\n\t\tx: rect.x * scale,\n\t\ty: rect.y * scale,\n\t\twidth: rect.width * scale,\n\t\theight: rect.height * scale\n\t};\n}\n\n/**\n * A Javascript ScrollView module with pan and pinch support. Hammer.js is required. \n */\nclass JScrollView {\n\t/**\n\t * @param {HtmlDivElement|string} container The DIV element or id or selector string that specifies a DIV element. \n\t *   JScrollView's root container is attached to the element. If the given DIV already contains child elements, \n\t *   they are moved into the content root element of the scroll view. To attach the content element by code, \n\t *   use `setContent(content)` method instead.\n\t * @param {Object} [options] \n\t * @param {Object} [options.contentOffset] \n\t * @param {number} [options.contentOffset.x=0] The X offset of the content.\n\t * @param {number} [options.contentOffset.y=0] The Y offset of the content.\n\t * @param {Object} [options.contentMargin]\n\t * @param {number|string} [options.contentMargin.top='auto'] The top margin of the content. number, percentage or `'auto'`.\n\t * @param {number|string} [options.contentMargin.left='auto'] The left margin of the content. number, percentage or `'auto'`.\n\t * @param {number|string} [options.contentMargin.bottom='auto'] The bottom margin of the content. number, percentage or `'auto'`.\n\t * @param {number|string} [options.contentMargin.right='auto'] The right margin of the content. number, percentage or `'auto'`.\t \n\t * @param {number} [options.zoomScale=1.0]\n\t * @param {boolean} [options.checkDobuleTapFailure=false] \n\t * - true to handle single tap event only if double tap gesture recognizer fails.\n\t * - false to handle single and double tap event simultaneously.\n\t * @param {number} [options.minimumZoomScale=0.5]\n\t * @param {number} [options.maximumZoomScale=5.5]\n\t * @param {string} [options.scrollBounce='auto'] \n\t * - 'off' to disable scroll bounce.\n\t * - 'on' to enable scroll bounce.\n\t * - 'auto' to disable scroll bounce if the content size is smaller than the view size.\n\t * @param {boolean} [options.watchResize=true] \n\t * - true to watch the window resize event and do layout process automatically.\n     * - false to stop watching the event.\n\t */\n\tconstructor(container, options) {\n\t\toptions = options || {};\n\t\tthis._baseContentSize = null;\n\t\tthis._marginInPixel = null;\n\t\tthis._contentAdjust = {x:0,y:0};\n\t\tthis._contentOffset = Object.assign({x:0,y:0}, options.contentOffset);\n\t\tthis._contentMargin = Object.assign({top:'auto',left:'auto',bottom:'auto',right:'auto'}, options.contentMargin);\n\t\tthis._zoomScale = options.zoomScale || 1.0;\n\t\tthis._wheelZoomScale = options.wheelZoomScale || 1.1;\n\t\tthis._minimumZoomScale = options.minimumZoomScale || 0.5;\n\t\tthis._maximumZoomScale = options.maximumZoomScale || 5.5;\n\t\tthis._checkDoubleTapFailure = options.checkDoubleTapFailure || false;\n\t\tthis._watchResize = options.watchResize || true;\n\t\tthis._scrollBounce = options.scrollBounce || 'auto';\n\n\t\tif(typeof(container) === 'string') {\n\t\t\tcontainer = document.getElementById(container) || document.querySelector(container);\n\t\t\tif(container == null) {\n\t\t\t\tthrow new Error('Missing container: ' + container);\n\t\t\t}\n\t\t}\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\tlet contentRoot = document.createElement('div');\n\t\tcontentRoot.id = '__jscrollview_root_';\n\t\tcontentRoot.style.position = 'absolute';\n\t\tcontentRoot.style.width = '100%';\n\t\tcontentRoot.style.height = '100%'\n\t\tcontentRoot.style.transformOrigin = \"top left\";\n\t\tlet children = container.children;\n\t\tfor(let i=0; i<children.length; i++) {\n\t\t\tcontentRoot.appendChild(children[i]);\n\t\t}\n\t\tcontainer.appendChild(contentRoot);\n\t\tthis._contentRoot = contentRoot;\n\t\tthis._container = container;\n\n\t\tthis._installGestureRecognizer(container, options);\n\t\tthis._resizeListener = (evt)=> {\n\t\t\tthis._containerWidth = this._container.clientWidth;\n\t\t\tthis._containerHeight = this._container.clientHeight;\n\t\t\tthis.invalidateSize();\n\t\t\tthis.setNeedsLayout();\n\t\t};\n\t\tif(this._watchResize) {\n\t\t\twindow.addEventListener('resize', this._resizeListener);\n\t\t}\n\t\tthis._resizeListener();\n\t}\n\n\t_installGestureRecognizer(container, options) {\n\n\t\tlet mc = new Hammer.Manager(container,{});\n\t\tlet doubleTap = new Hammer.Tap({event:'doubletap',taps:2,threshold:5});\n\t\tlet singleTap = new Hammer.Tap({event:'singletap'});\n\t\tlet pan = new Hammer.Pan({direction: Hammer.DIRECTION_ALL});\n\t\tlet pinch = new Hammer.Pinch();\n\n\t\tmc.add([doubleTap,singleTap,pan,pinch]);\n\n\t\tdoubleTap.recognizeWith(singleTap);\n\t\tif(options.checkDoubleTapFailure) {\n\t\t\tsingleTap.requireFailure(doubleTap);\n\t\t}\n\t\tpinch.recognizeWith(pan);\n\n\t\tmc.on(\"singletap\", (evt)=>{this._handleSingleTap(evt);evt.preventDefault()});\n\t\tmc.on(\"doubletap\", (evt)=>{this._handleDoubleTap(evt);evt.preventDefault()});\n\t\tmc.on(\"panstart panmove panend pancancel\", (evt)=>{this._handlePan(evt);evt.preventDefault()});\n\t\tmc.on(\"pinchstart pinchmove pinchend pinchcancel\", (evt)=>{this._handlePinch(evt);evt.preventDefault()});\n\n\t\tthis._mouseWheelListener = (evt)=>{this._handleMouseWheel(evt);evt.preventDefault()}\t\t\n\t\tcontainer.addEventListener('mousewheel',this._mouseWheelListener);\n\n\t\tthis._gestureDelegate = {};\n\t\tthis._mc = mc;\n\t}\n\n\t/**\n\t * Get the container DIV element which bound to this view.\n\t * @returns {HTMLDivElement}\n\t */\n\tgetContainer() {\n\t\treturn this._container;\n\t}\n\n\t/**\n\t * Get the view's internal Hammer.Manager instance that bound to the view's container.\n\t * @returns {Hammer.Manager} the gesture controller instance.\n\t */\n\tgetHammer() {\n\t\treturn this._mc;\t\t\n\t}\n\n\t/**\n\t * Destroy the view and unbinds all events. It does not destroy the content element. \n\t * To remove the content element is the user own responsibility.\n\t */\n\tdestroy() {\n\t\tthis._container.removeEventListener('mousewheel',this._mouseWheelListener);\n\t\twindow.removeEventListener('resize',this._resizeListener);\n\t\tthis._mc.destroy();\n\t\tthis._container = null;\n\t}\n\n\t/**\n     * Set the delegate object to intercept gesture events and customize the JScrollView's default behavior.\n     * All methods on the delegate object can return a boolean value. If the method returns true, \n     * the default action of JScrollView will be cancelled.\n     * @param {Object} delegate\n     * @param {HammerEventHandler} delegate.handleSingleTap\n     * @param {HammerEventHandler} delegate.handleDoulbeTap\n     * @param {HammerEventHandler} delegate.handlePan\n     * @param {HammerEventHandler} delegate.handlePinch\n\t */\n\tsetGestureDelegate(delegate) {\n\t\tthis._gestureDelegate = delegate || {};\n\t}\n\n\t/**\n\t * Set content element to this view. The previous content that already set to this view will be removed.\n\t * @param {HtmlElement|Object} content - A HtmlElement or an object which implements `toHtmlElement()` function.\n\t */\n\tsetContent(content) {\n\t\tif(typeof content['toHtmlElement'] === 'function') {\n\t\t\tcontent = content['toHtmlElement']();\n\t\t}\n\t\tthis._contentRoot.innerHTML = '';\n\t\tthis._contentRoot.appendChild(content);\n\t\tthis.invalidateSize();\n\t\tthis.setNeedsLayout();\n\t}\n\n\t/**\n\t * Invalidates inner layout of the view.\n\t * This method should be called if the view or content size is changed.\n\t */\n\tinvalidateSize() {\n\t\tthis._baseContentSize = null;\n\t\tthis._marginInPixel = null;\n\t}\n\n\t/** set/get the content margin.\n\t * @param {Object} [margin]\n\t * @param {number|string} [margin.top='auto'] The top margin of the content. number or `'auto'`.\n\t * @param {number|string} [margin.left='auto'] The left margin of the content. number or `'auto'`.\n\t * @param {number|string} [margin.bottom='auto'] The bottom margin of the content. number or `'auto'`.\n\t * @param {number|string} [margin.right='auto'] The right margin of the content. number or `'auto'`.\t \n\t */\n\tcontentMargin(margin) {\n\t\tif(margin != null) {\n\t\t\tif(margin.top != null) this._contentMargin.top = margin.top;\n\t\t\tif(margin.left != null) this._contentMargin.left = margin.left;\n\t\t\tif(margin.bottom != null) this._contentMargin.bottom = margin.bottom;\n\t\t\tif(margin.right != null) this._contentMargin.right = margin.right;\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ttop:this._contentMargin.top,\n\t\t\t\tleft:this._contentMargin.left,\n\t\t\t\tbottom:this._contentMargin.bottom,\n\t\t\t\tright:this._contentMargin.right,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * set/get the offset from the content origin.\n\t * @param {Point} offset - offset from the content origin.\n\t * @returns {(Point|undefined)}\n\t * @example\n\t * ```\n\t * // get content offset\n\t * var offset = view.contentOffset();\n\t * \n\t * // set content offset\n\t * view.contentOffset({x:20,y:50});\n\t * ```\n\t */\n\tcontentOffset(offset) {\n\t\tif(offset != null) {\n\t\t\tif(offset.x != null) this._contentOffset.x = offset.x;\n\t\t\tif(offset.y != null) this._contentOffset.y = offset.y;\n\t\t\tthis.setNeedsLayout();\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tx: this._contentOffset.x,\n\t\t\t\ty: this._contentOffset.y\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * set/get the offset from the content origin.\n\t * @param {Point} offset - offset from the content origin.\n\t * @param {boolean} [animated] - true to animate the transition to the new offset, false to make it immediate. \n\t */\n\tsetContentOffset(offset, animated) {\n\t\tif(offset.x != null) this._contentOffset.x = offset.x;\n\t\tif(offset.y != null) this._contentOffset.y = offset.y;\n\t\tthis.layout(animated?0.25:0);\n\t}\n\n\t/**\n\t * set/get a floating-point value that specifies the relative scale factor for mouse wheel zooming.\n\t * @param {number} [scale] relative scale factor \n\t * @returns {(number|undefined)}\n\t */\n\twheelZoomScale(scale) {\n\t\tif(scale != null) {\n\t\t\tthis._wheelZoomScale = scale;\n\t\t} else {\n\t\t\treturn this._wheelZoomScale;\n\t\t}\t\t\n\t}\n\n\t/**\n\t * set/get a floating-point value that specifies the current scale factor applied to the view's content.\n\t * @param {number} [scale] scale factor \n\t * @returns {(number|undefined)}\n\t */\n\tzoomScale(scale) {\n\t\tif(scale != null) {\n\t\t\tthis._zoomScale = scale;\n\t\t\tthis.setNeedsLayout();\n\t\t} else {\n\t\t\treturn this._zoomScale;\n\t\t}\n\t}\n\n\t/**\n\t * set the current scale factor applied to the view's content.\n\t * @param {number} scale scale factor\n\t * @param {boolean} [animated] true to animate the transition to the new scale, false to make it immediate.\n\t */\n\tsetZoomScale(scale, animated) {\n\t\tthis._zoomScale = scale;\n\t\tthis.layout(animated?0.25:0);\n\t}\n\n\t/**\n\t * set the current scale factor and the offset from the view's content\n\t * @param {Point} offset \n\t * @param {number} scale scale factor\n\t * @param {boolean} [animated] true to animate the transition, false to make it immediate.\n\t */\n\tsetContentOffsetAndZoomScale(offset, scale, animated) {\n\t\tif(offset.x != null) this._contentOffset.x = offset.x;\n\t\tif(offset.y != null) this._contentOffset.y = offset.y;\n\t\tthis._zoomScale = scale;\n\t\tthis.layout(animated?0.25:0);\n\t}\n\n\t/**\n\t * set/get a floating-point value that specifies the minimum scale factor that applied to the view's content.\n\t * @param {number} [scale] \n\t * @returns {(number|undefined)} \n\t */\n\tminimumZoomScale(scale) {\n\t\tif(scale != null) {\n\t\t\tthis._minimumZoomScale = scale;\n\t\t} else {\n\t\t\treturn this._minimumZoomScale;\n\t\t}\n\t}\n\n\t/**\n\t * set/get a floating-point value that specifies the maximum scale factor that applied to the view's content.\n\t * @param {number} [scale] 拡大率の最大値\n\t * @returns {(number|undefined)} \n\t */\n\tmaximumZoomScale(scale) {\n\t\tif(scale != null) {\n\t\t\tthis._maximumZoomScale = scale;\n\t\t} else {\n\t\t\treturn this._maximumZoomScale;\n\t\t}\t\t\n\t}\n\n\t/**\n\t * Invalidates the current layout of the view, and update the layout during the next update cycle.\n\t */\n\tsetNeedsLayout() {\n\t\tif(this._layoutTimerId == null) {\n\t\t \tthis._layoutTimerId = setTimeout( () => {\n\t\t \t\tthis.layout();\t\t\t\n\t\t \t\tthis._layoutTimerId = null;\n\t\t \t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Update the view's layout\n\t * @param {number} [duration] the time of the transition animation. 0 to make the transition immediate.\n\t */\n\tlayout(duration=0) {\n\n\t\tif (this._containterWidth == 0 || this._containerHeight == 0) {\n\t\t\tconsole.log(\"Fatal Error: invalid container size. \" + this._containerWidth + \"x\" + this._containerHeight);\n\t\t\treturn;\n\t\t}\n\n\t\tif (0 < duration) {\n\t\t\tif(this._layoutTimerId != null)  {\n\t\t\t\tclearTimeout(this._layoutTimerId);\n\t\t\t\tthis._layoutTimerId = null;\n\t\t\t}\n\n\t\t\tthis._contentRoot.style.transition = [\n\t\t\t\t\"transform \" + duration + \"s\"\n\t\t\t].join(',');\n\n\t\t} else {\n\t\t\tthis._contentRoot.style.transition = \"none\";\n\t\t}\n\n\t\tlet contentAdjust = this._calcContentAdjust(this._zoomScale);\n\n\t\tlet left = _toPX(contentAdjust.x - this._contentOffset.x);\n\t\tlet top  = _toPX(contentAdjust.y - this._contentOffset.y);\n\t\tlet transform = [\n\t\t\t\"translate(\" + left + \",\" + top + \")\",\n\t\t\t\"scale(\" + this._zoomScale.toFixed(4) + \")\"\n\t\t].join(\" \");\n\t\tthis._contentRoot.style.transform = transform;\n\t}\n\n\t/**\n\t * Get the size of the content at the current scale factor. The size of the content is computed\n\t * from the content and its children. There is no method to set the size of the content.\n\t * @returns {Size} The size of the content.\n\t */\n\tgetContentSize() {\n\t\treturn this._calcContentSize(this._zoomScale);\n\t}\n\n\t_calcMarginInPixel() {\n\t\tif(this._marginInPixel == null) {\n\t\t\tthis._marginInPixel = {\n\t\t\t\ttop:_toAbsLength(this._containerHeight, this._contentMargin.top),\n\t\t\t\tleft:_toAbsLength(this._containerWidth, this._contentMargin.left),\n\t\t\t\tbottom:_toAbsLength(this._containerHeight, this._contentMargin.bottom),\n\t\t\t\tright:_toAbsLength(this._containerWidth, this._contentMargin.right),\n\t\t\t};\n\t\t}\n\t\treturn this._marginInPixel;\n\t}\n\n\n\t/** \n\t * Calculate additional offset of the content that applied if the content size is smaller than view's size.\n\t * @param {number} scale - A flooting-point value that specifies the scale factor of the content.\n\t * @private\n\t */\n\t_calcContentAdjust(scale) {\n\t\tlet size = this._calcContentSize(scale);\n\n\t\tlet _adjust = (containerWidth, contentWidth, marginLeft, marginRight) => {\n\t\t\tlet x;\n\t\t\tif(isNaN(marginLeft) && !isNaN(marginRight)) {\n\t\t\t\tx = (containerWidth - contentWidth - marginRight)/scale;\n\t\t\t} else if(!isNaN(marginLeft) && isNaN(marginRight)) {\n\t\t\t\tx = marginLeft / scale;\n\t\t\t} else if(!isNaN(marginLeft) && !isNaN(marginRight)) {\n\t\t\t\tx = (containerWidth - contentWidth - marginRight) / scale;\n\t\t\t\tx = Math.max(x, marginLeft / scale);\n\t\t\t} else {\n\t\t\t\tx = Math.max(0, (containerWidth - contentWidth)/2);\n\t\t\t}\n\t\t\treturn x;\n\t\t}\n\n\t\tlet margin = this._calcMarginInPixel();\n\t\tlet ret = {\n\t\t\tx: _adjust(this._containerWidth, size.width, margin.left, margin.right),\n\t\t\ty: _adjust(this._containerHeight, size.height, margin.top, margin.bottom)\n\t\t};\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Calculate the size of the content at a specified scale factor.\n\t * @param {number} scale - A flooting-point value that specifies the scale factor of the content.\n\t * @private\n\t */\n\t_calcContentSize(scale) {\n\t\tlet size = \tthis._calcBaseContentSize();\n\t\treturn {width:size.width*scale,height:size.height*scale};\n\t}\n\n\t/**\n\t * Calculate the size of the content at the scale factor 1.0.\n\t * @private\n\t */\n\t_calcBaseContentSize() {\n\t\tif(this._baseContentSize == null) {\n\t\t\tlet w=0,h=0;\n\t\t\tlet elements = this._contentRoot.children;\n\t\t\tfor(let i=0; i<elements.length; i++) {\n\t\t\t\tlet child = elements[i];\n\t\t\t\tw = Math.max(w, (child.offsetLeft + child.offsetWidth));\n\t\t\t\th = Math.max(h, (child.offsetTop + child.offsetHeight));\n\t\t\t}\n\t\t\tthis._baseContentSize = {width:w, height:h};\n\t\t}\n\t\treturn {\n\t\t\twidth:this._baseContentSize.width,\n\t\t\theight:this._baseContentSize.height\n\t\t};\n\t}\n\n\t_getContainerOffset() {\n\t\tlet element = this._container;\n\t\tlet x=0, y=0;\t\t\n\t\twhile(element != null) {\n\t\t    x += element.offsetLeft;\n\t\t    y += element.offsetTop;\n\t\t    element = element.offsetParent;\n\t\t}\n\t\treturn {x:x,y:y};\n\t}\n\n    /**\n     * Converts a point from the global coordinate system to that of the view's container.\n\t * @param {Point} pos A point specified in the global coordinate sytem.\n\t * @returns {Point} A point specified in the container coordinate system of this view.\n     */\n\tglobalToContainer(pos) {\n\t\tlet containerOffset = this._getContainerOffset();\n\t\treturn {\n\t\t\tx:pos.x - containerOffset.x,\n\t\t\ty:pos.y - containerOffset.y\n\t\t};\n\t}\n\n\t/**\n     * Converts a point from the global coordinate system to that of the content.\n\t * @param {Point} pos A point specified in the global coordinate sytem.\n\t * @returns {Point} A point specified in the content coordinate system.\n\t */\n\tglobalToContent(pos) {\n\t\tpos = this.globalToContainer(pos);\n\t\tlet contentAdjust = this._calcContentAdjust(this._zoomScale);\n\t\treturn {\n\t\t\tx: (pos.x + this._contentOffset.x - contentAdjust.x) / this._zoomScale,\n\t\t\ty: (pos.y + this._contentOffset.y - contentAdjust.y) / this._zoomScale\n\t\t};\n\t}\n\n\t_handleSingleTap(evt) {\t\t\n\t\tif(this._gestureDelegate.handleSingleTap != null) {\n\t\t\tif(this._gestureDelegate.handleSingleTap(evt)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t_handleDoubleTap(evt) {\n\n\t\tif(this._gestureDelegate.handleDoubleTap != null) {\n\t\t\tif(this._gestureDelegate.handleDoubleTap(evt)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif(this._lock) return;\n\n\t\tif(this._zoomScale != 1.0) {\n\t\t\tthis.setContentOffsetAndZoomScale({x:0,y:0},1.0,true);\n\t\t} else {\n\t\t\tlet pos = this.globalToContent(evt.center);\n\t\t\tthis.zoomToPoint(pos,4.0,true);\n\t\t}\n\t}\n\n\t_getMinimumContentOffset(scale) {\n\t\treturn {x:0,y:0};\n\t}\n\n\t_getMaximumContentOffset(scale) {\n\t\tlet size = this._calcContentSize(scale || this._zoomScale);\n\t\tlet adjust = this._calcContentAdjust(scale || this._zoomScale);\n\t\treturn {\n\t\t\tx:Math.max(0, size.width - this._containerWidth + adjust.x),\n\t\t\ty:Math.max(0, size.height - this._containerHeight + adjust.y)\n\t\t};\n\t}\n\n\t_limitContentOffset(offset, bounce, scale) {\n\t\tscale = scale || this._zoomScale;\n\t\tlet min = this._getMinimumContentOffset(scale);\n\t\tlet max = this._getMaximumContentOffset(scale);\n\n\t\tlet size = this._calcContentSize(scale);\n\n\t\tlet bounceX, bounceY;\n\t\tif(bounce) {\n\t\t\tif(this._scrollBounce == 'auto') {\n\t\t\t\tbounceX = this._containerWidth < size.width;\n\t\t\t\tbounceY = this._containerHeight < size.height;\n\t\t\t} else {\n\t\t\t\tbounceX = bounceY = this._scrollBounce != 'off';\n\t\t\t}\n\t\t} else {\n\t\t\tbounceX = bounceY = false;\n\t\t}\n\n\t\tlet x,y;\n\t\tif(bounceX) {\n\t\t\tx = _limitSpring(min.x, offset.x, max.x, 4/scale);\n\t\t} else {\n\t\t\tx = Math.min(Math.max(offset.x,min.x),max.x);\n\t\t}\n\t\tif(bounceY) {\n\t\t\ty = _limitSpring(min.y, offset.y, max.y, 4/scale);\n\t\t} else {\n\t\t\ty = Math.min(Math.max(offset.y,min.y),max.y);\n\t\t}\n\t\treturn {x:x,y:y};\n\t}\n\n\t_handlePan(evt) {\n\t\tif(this._gestureDelegate.handlePan != null) {\n\t\t\tif(this._gestureDelegate.handlePan(evt)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif(this._lock || this._pinchStartZoomScale) return;\n\n\n\t\tif(evt.type == \"panstart\") {\t\t\t\n\t\t\tthis._panStartOffset = {\n\t\t\t\tx:this._contentOffset.x, \n\t\t\t\ty:this._contentOffset.y\n\t\t\t};\n\t\t} else if(evt.type == 'panmove') {\n\t\t\tlet offset = this._limitContentOffset({\n\t\t\t\tx:this._panStartOffset.x - evt.deltaX,\n\t\t\t\ty:this._panStartOffset.y - evt.deltaY\n\t\t\t}, true);\n\t\t\tthis._contentOffset.x = offset.x;\n\t\t\tthis._contentOffset.y = offset.y;\n\t\t\tthis.layout();\n\t\t} else if(evt.type == 'panend' || evt.type == 'pancancel') {\n\t\t\t\n\t\t\tthis._panStartOffset = null;\n\n\t\t\tlet min = this._getMinimumContentOffset();\n\t\t\tlet max = this._getMaximumContentOffset();\n\t\t\t\n\t\t\tif (this._contentOffset.x < min.x || max.x < this._contentOffset.x ||\n\t\t\t   this._contentOffset.y < min.y || max.y < this._contentOffset.y) {\n\t\t\t\tthis.setContentOffset({\n\t\t\t\t\tx:Math.min(Math.max(this._contentOffset.x,min.x),max.x),\n\t\t\t\t\ty:Math.min(Math.max(this._contentOffset.y,min.y),max.y),\n\n\t\t\t\t}, true);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_limitZoomScale(scale, spring) {\n\t\tif(spring) {\n\t\t\treturn _limitSpring(this._minimumZoomScale, scale, this._maximumZoomScale, 4);\n\t\t} else {\n\t\t\treturn Math.min(Math.max(this._minimumZoomScale, scale), this._maximumZoomScale);\n\t\t}\n\t}\n\n\t_handleMouseWheel(evt) {\n\t\tlet center = this.globalToContent({x:evt.pageX,y:evt.pageY});\n\t\tif(evt.deltaY < 0) {\n\t\t\tthis.zoomToPoint(center, this._limitZoomScale(this._zoomScale * this._wheelZoomScale), false);\n\t\t} else if(0 < evt.deltaY) {\n\t\t\tthis.zoomToPoint(center, this._limitZoomScale(this._zoomScale / this._wheelZoomScale), false);\n\t\t}\n\t}\n\n\t_handlePinch(evt) {\n\t\tif(this._gestureDelegate.handlePinch != null) {\n\t\t\tif(this._gestureDelegate.handlePinch(evt)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif(this._lock) return;\n\n\t\tif(evt.type == \"pinchstart\") {\n\t\t\tthis._pinchStartZoomScale = this._zoomScale;\n\t\t} else if(evt.type == 'pinchmove') {\n\t\t\tlet scale = this._limitZoomScale(this._pinchStartZoomScale * evt.scale, true);\n\t\t\tthis._lastPinchCenter = this.globalToContent(evt.center);\n\t\t\tthis.zoomToPoint(this._lastPinchCenter, scale);\n\t\t} else if(evt.type == 'pinchend' || evt.type == 'pinchcancel') {\n\t\t\tif(this._zoomScale < this._minimumZoomScale) {\n\t\t\t\tthis.setContentOffsetAndZoomScale({x:0,y:0}, this._minimumZoomScale, true);\n\t\t\t} else if(this._maximumZoomScale < this._zoomScale) {\n\t\t\t\tthis.zoomToPoint(this._lastPinchCenter, this._maximumZoomScale , true);\n\t\t\t}\n\t\t\tthis._pinchStartZoomScale = null;\n\t\t}\n\t}\n\n\t/**\n\t * Zooms to a specific point of the content.\n\t * @param {Point} pos A target point of the zoom. The point should be specified in the content's coordinate system.\n\t * @param {number} scale A floating-point value that specifies the new scale factor.\n\t * @param {boolean} animated true to animate the transition, false to make it immediate.\n\t */\n\tzoomToPoint(pos, scale, animated) {\n\t\tlet contentAdjust = this._calcContentAdjust(this._zoomScale);\n\n\t\tlet currentRect = {\n\t\t\tx: (this._contentOffset.x - contentAdjust.x) / this._zoomScale,\n\t\t\ty: (this._contentOffset.y - contentAdjust.y) / this._zoomScale,\n\t\t\twidth: this._containerWidth / this._zoomScale,\n\t\t\theight: this._containerHeight / this._zoomScale\n\t\t};\n\n\t\tlet a = this._zoomScale / scale;\n\t\tlet rx = pos.x - currentRect.x,\n\t\t\try = pos.y - currentRect.y;\n\t\tlet rect = {\n\t\t\tx: pos.x - rx * a,\n\t\t\ty: pos.y - ry * a,\n\t\t\twidth: currentRect.width * a,\n\t\t\theight: currentRect.height * a\n\t\t};\n\n\t\tthis.zoomTo(rect, true, animated);\n\t}\n\n\n\t/**\n\t * Zooms to a specific area of the content so that it is visible in this view.\n\t * @param {Rectangle} rect A rectangle defining an area of the content. \n\t *                         The rectangle should be in the coordinate space of the content.\n\t * @param {boolean} limitOffset true to limit the content offset, false to not limit it.\n\t * @param {boolean} animated true to animate the transition, false to make it immediate.\n\t */\n\tzoomTo(rect, limitOffset, animated) {\n\n\t\tlet scaleX = this._containerWidth / rect.width;\n\t\tlet scaleY = this._containerHeight / rect.height;\n\t\tlet newScale = Math.min(scaleX, scaleY);\n\t\tlet newOffset = {\n\t\t\tx:rect.x * newScale,\n\t\t\ty:rect.y * newScale\n\t\t};\n\t\tif(limitOffset) {\n\t\t\tnewOffset = this._limitContentOffset(newOffset, false, newScale);\n\t\t}\n\t\tthis.setContentOffsetAndZoomScale(newOffset, newScale, animated);\n\t}\n\n\n\tlock(flag) {\n\t\tthis._lock = flag;\n\t}\n\n\n}\n\nexport default JScrollView;\n\n\n// WEBPACK FOOTER //\n// ./library.js"],"sourceRoot":""}